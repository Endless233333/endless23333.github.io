<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>无止境的博客</title>
        <link>https://endless233333.github.io/</link>
        <description>无止境的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 14 Feb 2024 20:06:22 &#43;0800</lastBuildDate>
            <atom:link href="https://endless233333.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>我的 Arch Linux 安装和基础配置过程</title>
    <link>https://endless233333.github.io/archlinux_install_and_config/</link>
    <pubDate>Wed, 14 Feb 2024 20:06:22 &#43;0800</pubDate>
    <author>无止境</author>
    <guid>https://endless233333.github.io/archlinux_install_and_config/</guid>
    <description><![CDATA[<p>本文记录我的 Arch Linux 安装和基础配置的过程, 桌面为 xfce4, boot loader 为 systemd-boot, 文件系统为 ext4。</p>
<h2 id="安装部分">安装部分</h2>
<h3 id="联网">联网</h3>
<p>有线网络能自动联网, 无线网络使用 <code>iwctl</code> 进行连接:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">iwctl
</span></span><span class="line"><span class="cl">device list
</span></span><span class="line"><span class="cl">station wlan0 scan
</span></span><span class="line"><span class="cl">station wlan0 get-networks
</span></span><span class="line"><span class="cl">station wlan0 connect wifi-name
</span></span><span class="line"><span class="cl"><span class="nb">exit</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>可以使用 <code>ping</code> 检查网络连接。</p>
<p>联网之后可以通过 <code>passwd</code> 设置安装环境中 root 的密码, 然后通过其他机器 ssh 去连。</p>
<h3 id="更新系统时间">更新系统时间</h3>
<p>使用 <code>timedatectl</code> 确保系统时间是准确的。</p>
<h3 id="硬盘分区与格式">硬盘分区与格式</h3>
<p>使用 <code>fdisk -l</code> 列出当前分区情况。</p>
<p>分区步骤:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">fdisk /dev/nvme0n1
</span></span><span class="line"><span class="cl">n
</span></span><span class="line"><span class="cl"><span class="o">(</span>enter<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">(</span>enter<span class="o">)</span>
</span></span><span class="line"><span class="cl">+512M
</span></span><span class="line"><span class="cl">n
</span></span><span class="line"><span class="cl"><span class="o">(</span>enter<span class="o">)</span>
</span></span><span class="line"><span class="cl">+16G
</span></span><span class="line"><span class="cl">n
</span></span><span class="line"><span class="cl"><span class="o">(</span>enter<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">(</span>enter<span class="o">)</span>
</span></span><span class="line"><span class="cl">t
</span></span><span class="line"><span class="cl"><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="m">1</span>
</span></span><span class="line"><span class="cl">t
</span></span><span class="line"><span class="cl"><span class="m">2</span>
</span></span><span class="line"><span class="cl"><span class="m">19</span>
</span></span><span class="line"><span class="cl">w
</span></span></code></pre></td></tr></table>
</div>
</div><p>格式化:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">mkfs.ext4 /dev/nvme0n1p3
</span></span><span class="line"><span class="cl">mkswap /dev/nvme0n1p2
</span></span><span class="line"><span class="cl">mkfs.fat -F <span class="m">32</span> /dev/nvme0n1p1
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="挂载">挂载</h3>
<p>按如下顺序挂载:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">mount /dev/nvme0n1p3 /mnt
</span></span><span class="line"><span class="cl">mount --mkdir /dev/nvme0n1p1 /mnt/boot
</span></span><span class="line"><span class="cl">swapon /dev/nvme0n1p2
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装系统和必要的功能性软件">安装系统和必要的功能性软件</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pacstrap -K /mnt base linux linux-firmware base-devel networkmanager vim vi sudo openssh zsh intel-ucode
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="生成-fstab-文件">生成 fstab 文件</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">genfstab -U /mnt &gt; /mnt/etc/fstab
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="change-root">change root</h3>
<p>使用 <code>arch-chroot /mnt</code> 把系统环境切换到新系统下。</p>
<h3 id="设置时区">设置时区</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="设置主机名">设置主机名</h3>
<p>在 <code>/etc/hostname</code> 中写入主机名, 例如 myarch.</p>
<p>在 <code>vim /etc/hosts</code> 中写入以下内容:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">127.0.0.1   localhost
</span></span><span class="line"><span class="cl">::1         localhost
</span></span><span class="line"><span class="cl">127.0.1.1   myarch.localdomain myarch
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="硬件时间设置">硬件时间设置</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">hwclock --systohc
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="设置-locale">设置 Locale</h3>
<p>编辑 <code>/etc/locale.gen</code>, 去掉 <code>en_US.UTF-8 UTF-8</code> 和 <code>zh_CN.UTF-8 UTF-8</code> 前的井号。</p>
<p>然后使用 <code>locale-gen</code> 生成 <code>locale</code>.</p>
<p><code>echo 'LANG=en_US.UTF-8'  &gt; /etc/locale.conf</code> 设定 LANG 变量。</p>
<h3 id="设置-root-用户密码">设置 root 用户密码</h3>
<p><code>passwd</code> 然后输两遍密码。</p>
<h3 id="安装引导程序">安装引导程序</h3>
<p>安装 <code>systemd-boot</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">bootctl --path<span class="o">=</span>/boot install
</span></span></code></pre></td></tr></table>
</div>
</div><p>编辑 <code>/boot/loader/loader.conf</code> 配置启动选单:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">default	arch.conf
</span></span><span class="line"><span class="cl">timeout 0
</span></span><span class="line"><span class="cl">console-mode keep
</span></span><span class="line"><span class="cl">editor	no
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用 <code>cat /etc/fstab</code> 查看根分区的 UUID.</p>
<p>编辑 <code>/boot/loader/entries/arch.conf</code> 增加启动选项:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">title	Arch Linux
</span></span><span class="line"><span class="cl">linux	/vmlinuz-linux
</span></span><span class="line"><span class="cl">initrd  /intel-ucode.img
</span></span><span class="line"><span class="cl">initrd	/initramfs-linux.img
</span></span><span class="line"><span class="cl">options	root=UUID=... rw ibt=off nowatchdog
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="准备非-root-用户">准备非 root 用户</h3>
<p>创建用户:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">useradd -m -G wheel -s /bin/bash XXX
</span></span></code></pre></td></tr></table>
</div>
</div><p>设置密码:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">passwd XXX
</span></span></code></pre></td></tr></table>
</div>
</div><p>编辑 <code>sudoers</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">EDITOR=vim visudo
</span></span></code></pre></td></tr></table>
</div>
</div><p>去掉 <code>#%wheel ALL=(ALL:ALL) ALL</code> 前的井号。</p>
<h3 id="重启">重启</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nb">exit</span>
</span></span><span class="line"><span class="cl">umount -R /mnt
</span></span><span class="line"><span class="cl">reboot
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="联网-1">联网</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">systemctl <span class="nb">enable</span> --now NetworkManager
</span></span><span class="line"><span class="cl">nmcli device wifi connect 名 password 密
</span></span></code></pre></td></tr></table>
</div>
</div><p>联网后可以通过 <code>systemctl start sshd</code> 开启 ssh 服务。</p>
<h3 id="开启-32-位支持库">开启 32 位支持库</h3>
<p>编辑 <code>/etc/pacman.conf</code> 去掉 <code>[multilib]</code> 及其下一行前的井号。</p>
<p><code>pacman -Syyu</code> 更新一下。</p>
<h3 id="一大波安装">一大波安装</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">pacman -S <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>zsh-autosuggestions zsh-completions zsh-history-substring-search zsh-syntax-highlighting zsh-theme-powerlevel10k <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>xfce4 xfce4-goodies lightdm lightdm-gtk-greeter gvfs gvfs-mtp udiskie sof-firmware alsa-firmware alsa-ucm-conf pavucontrol pulseaudio pulseaudio-alsa pulseaudio-bluetooth network-manager-applet nm-connection-editor <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>adobe-source-han-serif-cn-fonts wqy-zenhei noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>mesa lib32-mesa vulkan-intel lib32-vulkan-intel <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>blueman bluez bluez-utils <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>fcitx5-im fcitx5-chinese-addons fcitx5-material-color fcitx5-pinyin-zhwiki fcitx5-configtool <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>firefox chromium flameshot okular steam libreoffice-still libreoffice-still-zh-cn man-db man-pages syncthing fd fzf git
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="yay-安装">yay 安装</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">git clone https://aur.archlinux.org/yay-bin.git
</span></span><span class="line"><span class="cl">pacman -R yay-bin
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> yay-bin
</span></span><span class="line"><span class="cl">makepkg -si
</span></span></code></pre></td></tr></table>
</div>
</div><p>常用软件:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">yay -S yay-bin clash-verge-rev-bin ttf-intel-one-mono visual-studio-code-bin
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="启动一些服务">启动一些服务</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">systemctl <span class="nb">enable</span> lightdm.service bluetooth.service systemd-boot-update.service
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="配置部分">配置部分</h2>
<h3 id="fcitx5">fcitx5</h3>
<p>编辑 <code>/etc/environment</code> 加入以下内容:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">GTK_IM_MODULE=fcitx
</span></span><span class="line"><span class="cl">QT_IM_MODULE=fcitx
</span></span><span class="line"><span class="cl">XMODIFIERS=@im=fcitx
</span></span><span class="line"><span class="cl">SDL_IM_MODULE=fcitx
</span></span><span class="line"><span class="cl">GLFW_IM_MODULE=ibus
</span></span></code></pre></td></tr></table>
</div>
</div><p>fcitx5 设置:</p>
<ul>
<li>Input Method 加上 pinyin</li>
<li>Addons -&gt; Classic User Interface -&gt; Theme -&gt; Material-Color-Red</li>
</ul>
<h3 id="firefox">firefox</h3>
<p>地址栏输入 <code>about:config</code>, 然后将 <code>browser.newtabpage.activity-stream.improvesearch.handoffToAwesomebar</code> 改成 false.</p>
<h3 id="libreoffice">libreoffice</h3>
<p>tools -&gt; options -&gt; language settings -&gt; user interface 选中文</p>
<h3 id="xfce4">xfce4</h3>
<p>中文化, 在 ~/.xinitrc 或 ~/.xprofile 里加上：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="k">export</span> <span class="n">LANG</span><span class="o">=</span><span class="n">zh_CN</span><span class="o">.</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span>
</span></span><span class="line"><span class="cl"><span class="k">export</span> <span class="n">LANGUAGE</span><span class="o">=</span><span class="n">zh_CN</span><span class="p">:</span><span class="n">en_US</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>xfce4 设置:
Appearance</p>
<ul>
<li>style: Adwaita-dark</li>
<li>icons: elementary</li>
<li>fonts:
<ul>
<li>default font: IntelOne Mono Regular</li>
<li>dpi: 120</li>
</ul>
</li>
</ul>
<p>Desktop
桌面
icon: default icon 去掉前三个</p>
<p>Panel</p>
<ul>
<li>panel1-items
<ul>
<li>whisker menu
<ul>
<li>commands 勾上 restart, shut down, suspend</li>
</ul>
</li>
<li>window buttons</li>
<li>separator</li>
<li>network monitor
<ul>
<li>update interval: 0.5</li>
<li>show values as bits</li>
<li>present data as: Bars and values</li>
</ul>
</li>
<li>system load monitor
<ul>
<li>update interval: 1000</li>
<li>只留下 cpu 和 mem</li>
</ul>
</li>
<li>mount devices</li>
<li>separator</li>
<li>stautus tray plugin</li>
<li>pulseaudio plugin</li>
<li>notification plugin</li>
<li>separator</li>
<li>clock
<ul>
<li>clock option:</li>
<li>layout: date only</li>
<li>font: 12</li>
<li>format: custom format %m-%d</li>
</ul>
</li>
<li>clock
<ul>
<li>clock option:</li>
<li>layout: time only</li>
<li>font: 16</li>
<li>format: 14:38</li>
</ul>
</li>
</ul>
</li>
<li>panel2-items
<ul>
<li>前两个 launcher 上移一个，中间加各种 launcher</li>
</ul>
</li>
</ul>
<p>Window Manager</p>
<ul>
<li>keyboard
<ul>
<li>Window operations menu 改成 super+space</li>
<li>改下 tile window to the &hellip;</li>
</ul>
</li>
</ul>
<p>Xfce Screensaver</p>
<ul>
<li>时间改成 60</li>
</ul>
<p>Terminal</p>
<ul>
<li>Appearance
<ul>
<li>字体: IntelOne Mono Regular 14</li>
<li>background: Transparent Background 0.9</li>
</ul>
</li>
<li>Colors
<ul>
<li>Background Color: 黑色上面那个</li>
</ul>
</li>
</ul>
<p>Keyboard</p>
<ul>
<li>Application Shortcuts
<ul>
<li>xflock4 super+l</li>
<li>flameshot gui shift+super+s</li>
<li>xfce4-appfinder 改成 alt+space</li>
</ul>
</li>
</ul>
<p>Power Manager</p>
<ul>
<li>General
<ul>
<li>when power button is pressed: Ask</li>
</ul>
</li>
<li>Display
<ul>
<li>连接电源时拉满</li>
</ul>
</li>
</ul>
<p>Session and Startup</p>
<ul>
<li>Application Autostart
<ul>
<li>打开 Clipman</li>
<li>添加 thunar 命令是 thunar &ndash;daemon</li>
</ul>
</li>
</ul>
]]></description>
</item>
<item>
    <title>通过 python -m 直接在命令行中使用 python 模块以实现一些有用的功能</title>
    <link>https://endless233333.github.io/python_cli/</link>
    <pubDate>Sat, 06 Jan 2024 23:14:42 &#43;0800</pubDate>
    <author>无止境</author>
    <guid>https://endless233333.github.io/python_cli/</guid>
    <description><![CDATA[<p>在过去, 我经常使用 <code>python -m http.server</code> 用来在局域网中给别人分享一些文件, 所以我打算去翻翻自己电脑上安装的各种 python 包, 找一找能直接通过 <code>python -m</code> 使用的有用的模块。</p>
<h2 id="python--m">python -m</h2>
<p>在 <a href="https://docs.python.org/3/using/cmdline.html#cmdoption-m" target="_blank" rel="noopener noreffer ">python 的文档</a>中可以看到, <code>python -m  &lt;module-name&gt;</code> 会在 sys.path 中搜索指定模块, 并以 <code>__main__</code> 模块执行其内容。</p>
<p>以 <code>__main__</code> 模块执行其内容有两种情况:</p>
<ul>
<li>如果是单独的 py 文件, 可以通过 <code>__name__ == '__main__'</code>, 一般是 <code>if __name__ == '__main__':</code></li>
<li>如果是一个包, 执行其下的 <code>__main__.py</code></li>
</ul>
<p>因此只需要在 sys.path 中找到包含 <code>__main__.py</code> 这个文件的目录或者内容中有 <code>if __name__ == '__main__':</code> 的文件即可。</p>
<h2 id="寻找">寻找</h2>
<p>我电脑上的 python 包都在 /usr/lib/python3.11, cd 到此目录。</p>
<p>使用 <code>find . -name &quot;__main__.py&quot;</code> 寻找 <code>__main__.py</code>.</p>
<p>使用 <code>rg -l &quot;if __name__ == '__main__':&quot; | sort</code> 寻找内容中有 <code>if __name__ == '__main__':</code> 的文件。</p>
<h2 id="筛选与使用">筛选与使用</h2>
<p>/usr/lib/python3.11 下的 site-packages 存放第三方模块。</p>
<p><strong>一般可以通过 <code>python -m xxx -h</code> 或 <code>python -m xxx --help</code> 获取帮助信息。</strong></p>
<h3 id="标准库">标准库</h3>
<h4 id="ast">ast</h4>
<p>解析源代码成抽象语法树, 例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; echo &#34;print(&#39;hello&#39;)&#34; | python -m ast
</span></span><span class="line"><span class="cl">Module(
</span></span><span class="line"><span class="cl">   body=[
</span></span><span class="line"><span class="cl">      Expr(
</span></span><span class="line"><span class="cl">         value=Call(
</span></span><span class="line"><span class="cl">            func=Name(id=&#39;print&#39;, ctx=Load()),
</span></span><span class="line"><span class="cl">            args=[
</span></span><span class="line"><span class="cl">               Constant(value=&#39;hello&#39;)],
</span></span><span class="line"><span class="cl">            keywords=[]))],
</span></span><span class="line"><span class="cl">   type_ignores=[])
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="base64">base64</h4>
<p>用于 base64 编解码, 例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; echo -n &#34;hello&#34; | python -m base64
</span></span><span class="line"><span class="cl">aGVsbG8=
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; echo -n &#34;aGVsbG8=&#34; | python -m base64 -d
</span></span><span class="line"><span class="cl">hello%
</span></span></code></pre></td></tr></table>
</div>
</div><p>由于 coreutils 里就有 base64, 所以直接在命令行使用这个模块意义不大。</p>
<h4 id="compileall">compileall</h4>
<p>可以将 .py 编译为 .pyc, 例如: <code>python -m compileall .</code>.</p>
<p>默认 .pyc 会放在 <code>__pycache__</code> 目录下。</p>
<h4 id="cprofile">cProfile</h4>
<p>性能分析, 例如: <code>python -m cProfile -m base64 ./1.txt</code>.</p>
<h4 id="curses">curses</h4>
<p>用于创建 TUI 的模块。</p>
<p><code>python -m curses.has_key</code> 检查 has_key.</p>
<p><code>python -m curses.textpad</code> 打开一个简单的写字板。</p>
<h4 id="ensurepip">ensurepip</h4>
<p>用于确保安装了 pip, 没什么用。</p>
<h4 id="gzip">gzip</h4>
<p>例如: <code>python -m gzip --best ./test.mp4</code></p>
<h4 id="httpserver">http.server</h4>
<p>起一个简单的 http 服务。</p>
<h4 id="imghdr">imghdr</h4>
<p>确认图像类型, 例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; python -m imghdr ./Pictures/7.png
</span></span><span class="line"><span class="cl">./Pictures/7.png: png
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="jsontool">json.tool</h4>
<p>校验并打印好看的 json, 例如: <code>python -m json.tool ~/data.json</code>.</p>
<h4 id="lib2to3">lib2to3</h4>
<p>用于将 python2 代码转化成 python3 代码, 可以直接 <code>2to3</code> 而不用 <code>python -m lib2to3</code>, 也没什么用。</p>
<h4 id="mimetypes">mimetypes</h4>
<p>显示文件的 mime 类型, 例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; python -m mimetypes 1.sh
</span></span><span class="line"><span class="cl">type: application/x-sh encoding: None
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="pdb">pdb</h4>
<p>python debugger, 用法: <code>python -m pdb your_script.py</code>.</p>
<h4 id="platform">platform</h4>
<p>获取平台信息:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; python -m platform
</span></span><span class="line"><span class="cl">Linux-6.6.9-arch1-1-x86_64-with-glibc2.38
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="profile">profile</h4>
<p>性能分析, 例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; python -m profile 1.py
</span></span><span class="line"><span class="cl">hello
</span></span><span class="line"><span class="cl">         5 function calls in 0.013 seconds
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Ordered by: standard name
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
</span></span><span class="line"><span class="cl">        1    0.000    0.000    0.000    0.000 1.py:1(&lt;module&gt;)
</span></span><span class="line"><span class="cl">        1    0.000    0.000    0.000    0.000 :0(exec)
</span></span><span class="line"><span class="cl">        1    0.000    0.000    0.000    0.000 :0(print)
</span></span><span class="line"><span class="cl">        1    0.013    0.013    0.013    0.013 :0(setprofile)
</span></span><span class="line"><span class="cl">        1    0.000    0.000    0.013    0.013 profile:0(&lt;code object &lt;module&gt; at 0x7f373a01e5d0, file &#34;1.py&#34;, line 1&gt;)
</span></span><span class="line"><span class="cl">        0    0.000             0.000          profile:0(profiler)
</span></span></code></pre></td></tr></table>
</div>
</div><p>选项 <code>-o</code> 可以保存分析结果到指定文件。</p>
<h4 id="pstats">pstats</h4>
<p>处理和显示 profile 的结果, 例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; python -m pstats test
</span></span><span class="line"><span class="cl">Welcome to the profile statistics browser.
</span></span><span class="line"><span class="cl">test%
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="pydoc">pydoc</h4>
<p>python 文档工具。</p>
<h4 id="quopri">quopri</h4>
<p><code>python -m quopri xxx</code> 对 xxx 进行 Quoted-Printable 编码, 选项 -d 解码。</p>
<h4 id="random">random</h4>
<p><code>python -m random</code> 测试产生随机数。</p>
<h4 id="shlex">shlex</h4>
<p>分词, 例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; echo -n &#34;print(&#39;hello&#39;)&#34; | python -m shlex
</span></span><span class="line"><span class="cl">Token: &#39;print&#39;
</span></span><span class="line"><span class="cl">Token: &#39;(&#39;
</span></span><span class="line"><span class="cl">Token: &#34;&#39;hello&#39;&#34;
</span></span><span class="line"><span class="cl">Token: &#39;)&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="site">site</h4>
<p><code>python -m site</code> 打印 sys.path 等信息。</p>
<h4 id="sysconfig">sysconfig</h4>
<p><code>python -m sysconfig</code> 打印配置信息。</p>
<h4 id="tabnanny">tabnanny</h4>
<p>检查缩进, 例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; python -m tabnanny -v 1.py
</span></span><span class="line"><span class="cl">&#39;1.py&#39;: Clean bill of health.
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="tarfile">tarfile</h4>
<p>创建和解压 tar 文件, 例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; touch 1
</span></span><span class="line"><span class="cl">&gt; ls
</span></span><span class="line"><span class="cl">1
</span></span><span class="line"><span class="cl">&gt; python -m tarfile -c 1.tar ./1
</span></span><span class="line"><span class="cl">&gt; ls
</span></span><span class="line"><span class="cl">1  1.tar
</span></span><span class="line"><span class="cl">&gt; python -m tarfile -l 1.tar
</span></span><span class="line"><span class="cl">./1
</span></span><span class="line"><span class="cl">&gt; python -m tarfile -t 1.tar
</span></span><span class="line"><span class="cl">[&lt;TarInfo &#39;./1&#39; at 0x7f9cc5ae5cc0&gt;]
</span></span><span class="line"><span class="cl">&gt; rm 1
</span></span><span class="line"><span class="cl">&gt; ls
</span></span><span class="line"><span class="cl">1.tar
</span></span><span class="line"><span class="cl">&gt; python -m tarfile -e 1.tar
</span></span><span class="line"><span class="cl">&gt; ls
</span></span><span class="line"><span class="cl">1  1.tar
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="tkinter">tkinter</h4>
<p>用于创建 GUI 的模块, 直接 <code>python -m tkinter</code> 的话会有一个简单的小窗口。</p>
<h4 id="turtledemo">turtledemo</h4>
<p>正如它的名字一样, 直接使用会出现 turtle 的 demo.</p>
<h4 id="unittest">unittest</h4>
<p>用于在命令行中直接运行单元测试。</p>
<h4 id="uu">uu</h4>
<p>进行 uu 编码和解码。</p>
<h4 id="venv">venv</h4>
<p>创建虚拟环境: <code>python -m venv aaa</code>
激活虚拟环境: <code>source aaa/bin/activate</code>
退除虚拟环境: <code>deactivate</code></p>
<h4 id="xmlrpcserver">xmlrpc.server</h4>
<p><code>python -m xmlrpc.server</code> 起一个简单的 xmlrpc 服务。</p>
<h4 id="zipapp">zipapp</h4>
<p>创建和执行 pyz.</p>
<p>创建: <code>python -m zipapp -o 1.pyz -m &quot;myapp:main&quot; ./app</code></p>
<p>执行: <code>python 1.pyz</code></p>
<p>在已存在 <code>__main__.py</code> 的目录中不可以使用 <code>-m</code> 选项指定入口点。</p>
]]></description>
</item>
<item>
    <title>zsh 提示符</title>
    <link>https://endless233333.github.io/zsh_prompt/</link>
    <pubDate>Fri, 05 Jan 2024 17:04:08 &#43;0800</pubDate>
    <author>无止境</author>
    <guid>https://endless233333.github.io/zsh_prompt/</guid>
    <description><![CDATA[<p>在 <a href="https://man.archlinux.org/man/zshparam.1" target="_blank" rel="noopener noreffer ">zshparam(1)</a> 中可以看到 zsh 的各种提示符可以通过修改 PROMPT, PROMPT2, PROMPT3, PROMPT4, RPROMPT 等变量的值进行设置, 它们的基本语法相同, 其中 PROMPT 是主要的提示符, 本文也以它为例。</p>
<h2 id="zsh-prompt-转义字符">zsh PROMPT 转义字符</h2>
<p>zshparam(1) 中关于 PS1 的说明 (zsh 中 PROMPT, prompt, PS1 等价) 指向了 <a href="https://man.archlinux.org/man/zshmisc.1" target="_blank" rel="noopener noreffer ">zshmisc(1)</a>。</p>
<p>在 zshmisc(1) 的 <a href="https://man.archlinux.org/man/zshmisc.1#SIMPLE_PROMPT_ESCAPES" target="_blank" rel="noopener noreffer ">SIMPLE PROMPT ESCAPES</a> 一节中可以看到到所有的转义字符，以下列出一些我认为有用的:</p>
<ul>
<li>登陆信息:
<ul>
<li><code>%M</code>: 完整的主机名</li>
<li><code>%n</code>: 用户名</li>
</ul>
</li>
<li>Shell 状态:
<ul>
<li><code>%#</code>: 特权模式下是一个井号否则是一个百分号</li>
<li><code>%?</code>: 上一个命令的返回状态</li>
<li><code>%d</code> 或 <code>%/</code>: 当前目录</li>
<li><code>%~</code>: 当前目录，若以 $HOME 起始，则将之替换为一个波浪号</li>
<li><code>%j</code>: 作业数</li>
</ul>
</li>
<li>时间和日期:
<ul>
<li><code>%D</code>: 年-月-日</li>
<li><code>%T</code>: 时:分</li>
<li><code>%*</code>: 时:分:秒</li>
</ul>
</li>
<li>样式:
<ul>
<li><code>%B (%b)</code>: 开始 (结束) 粗体</li>
<li><code>%F{red} (%f)</code>: 开始 (结束) 颜色</li>
</ul>
</li>
<li>条件子串:
<ul>
<li><code>%(x.true-text.false-text)</code>: x 为条件, true-text 为条件为真时显示的内容, false-text 为条件为假时显示的内容。x 有特定的选择, 当 x 为 ? 时，表示上一个命令的返回状态, 默认 0 为真, 其他为假。</li>
</ul>
</li>
</ul>
<h2 id="git-当前分支名">git 当前分支名</h2>
<p>在 <a href="https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-Zsh" target="_blank" rel="noopener noreffer ">PRO Git 的 Git in Zsh</a> 一节中可以看到一个在右侧显示分支名的实例:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">autoload -Uz vcs_info
</span></span><span class="line"><span class="cl">precmd_vcs_info<span class="o">()</span> <span class="o">{</span> vcs_info <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">precmd_functions</span><span class="o">+=(</span> precmd_vcs_info <span class="o">)</span>
</span></span><span class="line"><span class="cl">setopt prompt_subst
</span></span><span class="line"><span class="cl"><span class="nv">RPROMPT</span><span class="o">=</span><span class="s1">&#39;${vcs_info_msg_0_}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># PROMPT=&#39;${vcs_info_msg_0_}%# &#39;</span>
</span></span><span class="line"><span class="cl">zstyle <span class="s1">&#39;:vcs_info:git:*&#39;</span> formats <span class="s1">&#39;%b&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在 <code>zstyle ':vcs_info:git:*' formats '%b'</code> 一句中 <code>'%b'</code> 指定了显示的样式，<code>%b</code> 表示分支名。</p>
<h2 id="我的-prompt-配置">我的 PROMPT 配置</h2>
<p>推荐一个网站 <a href="https://zsh-prompt-generator.site/" target="_blank" rel="noopener noreffer ">zsh-prompt-generator</a> 用于生成简单的 PROMPT。</p>
<p>首先我希望提示符分为两行，这只需要加一个换行即可:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PROMPT</span><span class="o">=</span><span class="s1">&#39;┌──
</span></span></span><span class="line"><span class="cl"><span class="s1">└&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">┌──
</span></span><span class="line"><span class="cl">└
</span></span></code></pre></td></tr></table>
</div>
</div><p>在第一行中显示当前的时间和当前目录:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PROMPT</span><span class="o">=</span><span class="s1">&#39;┌──(%T)─[%~]
</span></span></span><span class="line"><span class="cl"><span class="s1">└&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">┌──<span class="o">(</span>20:00<span class="o">)</span>─<span class="o">[</span>~<span class="o">]</span>
</span></span><span class="line"><span class="cl">└
</span></span></code></pre></td></tr></table>
</div>
</div><p>在第二行中, 若上一个命令的返回状态不为 0 则显示此返回状态, 否则按照 <code>%#</code> 显示:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PROMPT</span><span class="o">=</span><span class="s1">&#39;┌──(%T)─[%~]
</span></span></span><span class="line"><span class="cl"><span class="s1">└(%(?.%#.%?))─&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">┌──<span class="o">(</span>20:00<span class="o">)</span>─<span class="o">[</span>~<span class="o">]</span>
</span></span><span class="line"><span class="cl">└<span class="o">(</span>%<span class="o">)</span>─false
</span></span><span class="line"><span class="cl">┌──<span class="o">(</span>20:00<span class="o">)</span>─<span class="o">[</span>~<span class="o">]</span>
</span></span><span class="line"><span class="cl">└<span class="o">(</span>1<span class="o">)</span>─
</span></span></code></pre></td></tr></table>
</div>
</div><p>在第二行显示当前分支名:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">autoload -Uz vcs_info
</span></span><span class="line"><span class="cl">precmd_vcs_info<span class="o">()</span> <span class="o">{</span> vcs_info <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">precmd_functions</span><span class="o">+=(</span> precmd_vcs_info <span class="o">)</span>
</span></span><span class="line"><span class="cl">setopt prompt_subst
</span></span><span class="line"><span class="cl">zstyle <span class="s1">&#39;:vcs_info:git:*&#39;</span> formats <span class="s1">&#39;[%b]─&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PROMPT</span><span class="o">=</span><span class="s1">&#39;┌──(%T)─[%~]
</span></span></span><span class="line"><span class="cl"><span class="s1">└(%(?.%#.%?))─${vcs_info_msg_0_}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">┌──<span class="o">(</span>21:27<span class="o">)</span>─<span class="o">[</span>~/git-test<span class="o">]</span>
</span></span><span class="line"><span class="cl">└<span class="o">(</span>%<span class="o">)</span>─<span class="o">[</span>master<span class="o">]</span>─
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后设置一下颜色:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">autoload -Uz vcs_info
</span></span><span class="line"><span class="cl">precmd_vcs_info<span class="o">()</span> <span class="o">{</span> vcs_info <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">precmd_functions</span><span class="o">+=(</span> precmd_vcs_info <span class="o">)</span>
</span></span><span class="line"><span class="cl">setopt prompt_subst
</span></span><span class="line"><span class="cl">zstyle <span class="s1">&#39;:vcs_info:git:*&#39;</span> formats <span class="s1">&#39;%F{10}[%f%b%F{10}]─%f&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PROMPT</span><span class="o">=</span><span class="s1">&#39;%F{10}┌──(%f%F{11}%T%f%F{10})─[%f%F{15}%~%f%F{10}]
</span></span></span><span class="line"><span class="cl"><span class="s1">└(%f%(?.%F{14}%#%f.%F{9}%?%f)%F{10})─%f${vcs_info_msg_0_}&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>
